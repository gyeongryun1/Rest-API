plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
//	id 'org.asciidoctor.convert' version '1.5.8'
//	id "org.asciidoctor.convert" version "1.5.3"
	id "org.asciidoctor.jvm.convert" version "3.3.2"
	id 'java'

}

group = 'rest-api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

//configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}
//}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

ext {
	snippetsDir = file('build/generated-snippets')
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok:1.18.22'
	implementation 'junit:junit:4.13.1'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.2.RELEASE'
//	testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.2.RELEASE'
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

}

//ext {
//	snippetsDir = file('build/generated-snippets')
//}

//test {
//	outputs.dir snippetsDir
//}
test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	configurations 'asciidoctorExt'

	inputs.dir snippetsDir
	dependsOn test
}
asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}
tasks.withType(Test) {
	systemProperty "file.encoding", "UTF-8"
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}

//tasks.named('test') {
//	outputs.dir snippetsDir
//	useJUnitPlatform()
//}
//
//
//tasks.named('asciidoctor') {
//	inputs.dir snippetsDir
//	dependsOn test
bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}
